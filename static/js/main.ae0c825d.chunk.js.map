{"version":3,"sources":["components/header/index.js","components/footer/index.js","components/form/index.js","components/results/index.js","app.js","index.js"],"names":["Header","title","method","url","className","Card","style","width","Body","Text","Footer","Form","handleApiCall","useState","setURL","setMethod","fetchAPI","a","response","axios","then","res","catch","e","console","log","message","data","body","userId","id","handleSubmit","preventDefault","target","reset","testid","onSubmit","onChange","value","placeholder","name","type","required","onClick","toUpperCase","Results","isLoading","JSON","stringify","headers","undefined","App","setData","requestParams","setReqParams","setIsLoading","callApi","reqParams","setTimeout","Container","fluid","Row","Col","md","Main","React","Component","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.ae0c825d.chunk.js","sourcesContent":["import Card from 'react-bootstrap/Card'\n\nconst Header = ({title, method, url}) => {\n  return(\n    <>\n      <header>\n        <h1 \n          data-testid=\"header-1\"\n          className=\"header\">{title}</h1>\n        <h2 \n          title=\"subtitle\" \n          className=\"header2\"\n        >by: antoni909\n        </h2>\n      </header>\n      {\n        method && url\n        ?<Card style={{ width: \"30rem\"}}>\n          <Card.Body>\n            <Card.Text>\n              Method: {(method)}\n            </Card.Text>\n            <Card.Text>\n              URL: {(url)}\n            </Card.Text>\n          </Card.Body>\n         </Card>\n        :null\n      }\n    </>\n  )\n\n}\n\nexport default Header;\n","\nconst Footer = () => (\n    <div className=\"footer\">\n        <p> &copy; 2018 </p> \n    </div>\n)\n\nexport default Footer;\n","import React, {useState} from 'react'\nimport Card from 'react-bootstrap/Card'\nimport axios from 'axios'\nimport './form.scss';\n\nconst Form = ({handleApiCall}) => {\n\n  const [url, setURL] = useState('')\n  const [method, setMethod] = useState('')\n\n  const fetchAPI = async () => {\n    let response = null\n    if( url && (method === 'GET') ){\n      return response = await axios({\n          method: method, \n          url: url,\n        })  \n          .then(res => res)\n          .catch( e => console.log('error: ', e.message))\n    }else if(url && (method === 'POST')){\n      return response = await axios({\n        method: method, \n        url: 'https://jsonplaceholder.typicode.com/posts',\n        data: {title:'fake title', body:'fake body', userId: 2}\n      })  \n        .then(res => res)\n        .catch( e => console.log('error: ', e.message))\n    }else if(url && (method === 'PUT')){\n      return response = await axios({\n        method: method, \n        url: 'https://jsonplaceholder.typicode.com/posts/1',\n        data: {\n          id: 1,\n          title: 'foo',\n          body: 'bar',\n          userId: 1,\n        }\n      })  \n        .then(res => res)\n        .catch( e => console.log('error: ', e.message))\n    }else if(url && (method === 'DELETE')){\n      return response = await axios({\n        method: method, \n        url: 'https://jsonplaceholder.typicode.com/posts/1'\n      })  \n        .then( res => res )\n        .catch( e => console.log('error: ', e.message))\n    }else{ return response }\n  }\n  \n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const data = await fetchAPI()\n    handleApiCall({ \n      data: data, \n      method: method, \n      url: url\n    });\n    e.target.reset()\n  }\n    return (\n      <Card style={{ width: \"30rem\" }}>\n        <Card.Body>\n          <form testid=\"formsubmit\" onSubmit={handleSubmit}>\n            <label>\n              <span> URL </span>\n              <input\n                onChange={ (e) =>  setURL(e.target.value) }\n                placeholder=\"enter url here ...\"\n                name='url' \n                type='text'\n                required \n              />\n              <button \n                type=\"submit\"> GO </button>\n            </label>\n            <label \n              onClick={ (e) => setMethod(e.target.id.toUpperCase()) } \n              className=\"methods\">\n              <span id=\"get\">GET</span>\n              <span id=\"post\">POST</span>\n              <span id=\"put\">PUT</span>\n              <span id=\"delete\">DELETE</span>\n            </label>\n          </form>\n        </Card.Body>\n      </Card>\n    );\n}\n\nexport default Form;\n","import Card from 'react-bootstrap/Card'\n\nconst Results = ({data, isLoading}) => {\n  console.log('**',isLoading)\n  return(\n    <div>\n      {\n        isLoading\n          ?<Card body style={ {width: \"50rem\"} } >\n            <Card.Text>\n              Fetching ...\n            </Card.Text>\n          </Card>\n          :<Card body style={ {width: \"50rem\"} }>{\n              data\n                ?<div>\n                  <pre data-testid=\"json-headers\">\n                    Headers: {data ? JSON.stringify(data.headers, undefined, 2) : null}\n                  </pre>\n                  <pre data-testid=\"json-res-body\">\n                    Response: {data ? JSON.stringify(data.data, undefined, 2) : null}\n                  </pre>\n                  </div>\n                : null\n          }</Card>\n      }\n    </div>\n  )\n}\n\nexport default Results;\n","import React, { useState } from 'react';\nimport './app.scss';\nimport Header from './components/header';\nimport Footer from './components/footer';\nimport Form from './components/form';\nimport Results from './components/results';\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nconst App = () => {\n\n  const [data , setData ] = useState(null)\n  const [requestParams , setReqParams ] = useState({})\n  const [isLoading, setIsLoading] = useState(false)\n\n  const callApi = async (reqParams) => {\n    setIsLoading(true)\n    setTimeout(() => {\n      setData(reqParams.data)\n      setReqParams(reqParams)\n      setIsLoading(false) \n    }, 1000);\n  }\n  return (\n    <div>\n        <Container fluid>\n\n          <Row className=\"justify-content-md-center\">\n            <Header \n              title=\"RESTy\"\n              url={requestParams['url']}\n              method={requestParams['method']}\n            />\n          </Row>\n          <Row className=\"justify-content-md-center\">\n            <Col md=\"auto\">\n              <Form \n                handleApiCall={callApi} \n              />\n            </Col>\n          </Row>\n          <Row className=\"justify-content-md-center\">\n            {\n              data\n              ?<Col md=\"auto\">\n              <Results\n                isLoading={isLoading} \n                data={data} \n              />\n            </Col>\n              :null\n            }\n          </Row>\n\n        </Container>\n        <Footer />\n      </div>\n\n  );\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app.js';\n\nclass Main extends React.Component {\n  render() {\n    return <App />;\n  }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);\n"],"sourceRoot":""}